@page "/coscos/{Id}"
@inject IGameCreatorService gameCreator


<h1 class="font-weight-bold">Playlist:  @gameCreator.playlist.PlaylistName</h1>
<br/>
<h5>Description:
    @gameCreator.playlist.Description</h5>
<br />
<br />
<h4>What do you want to guess?</h4>
<select @onchange="(e) => ChangeGameType(e.Value)">
    <option value="True" selected>Author</option>
    <option value="False">Title</option>
</select>
<br />
<br />
<h4>Duration of the game?</h4>
<input style="width: 15%;" type="number" @bind-value="gameDuration" class="form-control" placeholder="time" aria-label="time" aria-describedby="basic-addon2">
<br />
<br />
<h4>List of songs:</h4>
<table class="table  table-striped" style="width: 50%">
    <thead>
        <tr>
            <th scope="col">#</th>
            <th scope="col">Title</th>
            <th scope="col">Author</th>
            <th scope="col">Youtube URL</th>
        </tr>
    </thead>
    @foreach (var song in gameCreator.songs)
    {
        <tbody>
            <tr>

                <th scope="row">@(gameCreator.songs.FindIndex(i => i.YTVidoeId == song.YTVidoeId) + 1)</th>
                <td>@song.Title</td>
                <td>@song.Author</td>
                <td>
                    <a href="https://youtube.com/watch?v=@song.YTVidoeId" class="btn btn-outline-dark" target="_blank" rel="noopener noreferrer">Watch video</a>
                </td>
            </tr>
        </tbody>
    }
</table>


@code {
    [Parameter]
    public string? Id { get; set; }
    private bool? gameType { get; set; }
    private int? gameDuration { get; set; } = 30;

    protected override async Task OnParametersSetAsync()
    {
        await gameCreator.GetSongs(new Guid(Id));
    }
    void ChangeGameType(object args)
    {
        bool.TryParse(args.ToString(), out var result);
        gameCreator.game.type = result;
    }
}
