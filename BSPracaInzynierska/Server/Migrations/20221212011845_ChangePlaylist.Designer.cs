// <auto-generated />
using System;
using BSPracaInzynierska.Server.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BSPracaInzynierska.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221212011845_ChangePlaylist")]
    partial class ChangePlaylist
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BSPracaInzynierska.Shared.LeaderBoard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PlaylistId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("playerTime")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("PlaylistId");

                    b.HasIndex("UserId");

                    b.ToTable("LeaderBoard");
                });

            modelBuilder.Entity("BSPracaInzynierska.Shared.MultiGame", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GameCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfTracks")
                        .HasColumnType("int");

                    b.Property<Guid>("PlaylistId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserHost")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("gameTime")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("PlaylistId");

                    b.ToTable("Game");
                });

            modelBuilder.Entity("BSPracaInzynierska.Shared.MusicPlaylist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfTracks")
                        .HasColumnType("int");

                    b.Property<string>("PlaylistName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("blindGuessSongs")
                        .HasColumnType("int");

                    b.Property<int>("blindGuessTime")
                        .HasColumnType("int");

                    b.Property<long>("favourites")
                        .HasColumnType("bigint");

                    b.Property<int>("lightningRoundSongs")
                        .HasColumnType("int");

                    b.Property<int>("lightningRoundTime")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("MusicPlaylists");
                });

            modelBuilder.Entity("BSPracaInzynierska.Shared.Song", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PlaylistId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("SongDuration")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YTChanelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YTVideoTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YTVidoeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PlaylistId");

                    b.ToTable("Songs");
                });

            modelBuilder.Entity("BSPracaInzynierska.Shared.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("currentGameId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("currentGameId");

                    b.ToTable("Uzytkownicy");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e0e9f003-574c-4adf-b6bc-69845e7703ec"),
                            Email = "admin",
                            PasswordHash = new byte[] { 6, 89, 116, 226, 85, 241, 66, 9, 150, 54, 255, 242, 81, 39, 67, 201, 76, 84, 81, 12, 243, 56, 196, 194, 14, 47, 182, 112, 160, 141, 84, 29, 208, 214, 252, 86, 254, 60, 70, 233, 202, 233, 160, 94, 118, 164, 169, 190, 252, 158, 131, 115, 237, 85, 59, 32, 125, 179, 173, 78, 171, 116, 221, 9 },
                            PasswordSalt = new byte[] { 140, 37, 37, 34, 56, 182, 242, 241, 195, 172, 48, 244, 113, 165, 116, 177, 84, 62, 30, 212, 162, 24, 29, 202, 66, 165, 160, 10, 16, 116, 73, 250, 181, 51, 141, 16, 190, 122, 48, 49, 177, 157, 10, 111, 107, 65, 249, 123, 117, 136, 185, 22, 42, 73, 52, 174, 43, 0, 93, 11, 98, 43, 248, 48, 155, 62, 52, 9, 231, 186, 227, 253, 186, 145, 79, 82, 20, 233, 118, 63, 208, 163, 196, 157, 72, 17, 211, 217, 42, 203, 91, 10, 42, 34, 218, 84, 43, 156, 219, 230, 24, 24, 58, 129, 42, 94, 99, 8, 138, 146, 85, 94, 240, 148, 230, 105, 68, 200, 208, 156, 254, 166, 163, 193, 89, 50, 202, 59 },
                            Role = "Admin",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("MusicPlaylistUser", b =>
                {
                    b.Property<Guid>("FavouritePlaylistsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsersFavouritesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FavouritePlaylistsId", "UsersFavouritesId");

                    b.HasIndex("UsersFavouritesId");

                    b.ToTable("MusicPlaylistUser");
                });

            modelBuilder.Entity("BSPracaInzynierska.Shared.LeaderBoard", b =>
                {
                    b.HasOne("BSPracaInzynierska.Shared.MusicPlaylist", "Playlist")
                        .WithMany("LeaderBoards")
                        .HasForeignKey("PlaylistId");

                    b.HasOne("BSPracaInzynierska.Shared.User", "Player")
                        .WithMany("Leaders")
                        .HasForeignKey("UserId");

                    b.Navigation("Player");

                    b.Navigation("Playlist");
                });

            modelBuilder.Entity("BSPracaInzynierska.Shared.MultiGame", b =>
                {
                    b.HasOne("BSPracaInzynierska.Shared.MusicPlaylist", "Playlist")
                        .WithMany("CurrentGames")
                        .HasForeignKey("PlaylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Playlist");
                });

            modelBuilder.Entity("BSPracaInzynierska.Shared.MusicPlaylist", b =>
                {
                    b.HasOne("BSPracaInzynierska.Shared.User", "Creator")
                        .WithMany("MusicPlaylists")
                        .HasForeignKey("UserId");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("BSPracaInzynierska.Shared.Song", b =>
                {
                    b.HasOne("BSPracaInzynierska.Shared.MusicPlaylist", "Playlist")
                        .WithMany("Songs")
                        .HasForeignKey("PlaylistId");

                    b.Navigation("Playlist");
                });

            modelBuilder.Entity("BSPracaInzynierska.Shared.User", b =>
                {
                    b.HasOne("BSPracaInzynierska.Shared.MultiGame", "CurrentGame")
                        .WithMany("Players")
                        .HasForeignKey("currentGameId");

                    b.Navigation("CurrentGame");
                });

            modelBuilder.Entity("MusicPlaylistUser", b =>
                {
                    b.HasOne("BSPracaInzynierska.Shared.MusicPlaylist", null)
                        .WithMany()
                        .HasForeignKey("FavouritePlaylistsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BSPracaInzynierska.Shared.User", null)
                        .WithMany()
                        .HasForeignKey("UsersFavouritesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BSPracaInzynierska.Shared.MultiGame", b =>
                {
                    b.Navigation("Players");
                });

            modelBuilder.Entity("BSPracaInzynierska.Shared.MusicPlaylist", b =>
                {
                    b.Navigation("CurrentGames");

                    b.Navigation("LeaderBoards");

                    b.Navigation("Songs");
                });

            modelBuilder.Entity("BSPracaInzynierska.Shared.User", b =>
                {
                    b.Navigation("Leaders");

                    b.Navigation("MusicPlaylists");
                });
#pragma warning restore 612, 618
        }
    }
}
