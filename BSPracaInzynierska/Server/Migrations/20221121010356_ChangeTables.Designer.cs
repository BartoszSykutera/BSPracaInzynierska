// <auto-generated />
using System;
using BSPracaInzynierska.Server.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BSPracaInzynierska.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221121010356_ChangeTables")]
    partial class ChangeTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BSPracaInzynierska.Shared.MusicPlaylist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfTracks")
                        .HasColumnType("int");

                    b.Property<string>("PlaylistName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("MusicPlaylists");
                });

            modelBuilder.Entity("BSPracaInzynierska.Shared.Song", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MusicPlaylistId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PlaylistId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("SongDuration")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YTChanelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YTVideoTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YTVidoeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MusicPlaylistId");

                    b.ToTable("Songs");
                });

            modelBuilder.Entity("BSPracaInzynierska.Shared.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Uzytkownicy");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b8efb714-9813-49d5-a9c7-fc0b129c2f47"),
                            Email = "admin",
                            PasswordHash = new byte[] { 120, 90, 211, 244, 76, 217, 46, 12, 153, 51, 116, 143, 74, 87, 146, 25, 221, 26, 8, 74, 99, 62, 25, 171, 166, 243, 117, 61, 64, 103, 134, 161, 86, 239, 131, 120, 171, 124, 203, 60, 111, 54, 225, 252, 8, 241, 180, 156, 255, 28, 113, 203, 146, 60, 71, 242, 164, 172, 51, 78, 130, 235, 161, 217 },
                            PasswordSalt = new byte[] { 180, 73, 148, 150, 71, 126, 218, 75, 158, 33, 124, 102, 103, 130, 21, 117, 141, 9, 37, 96, 88, 55, 55, 86, 208, 15, 0, 252, 222, 141, 12, 53, 207, 252, 17, 73, 242, 109, 168, 196, 194, 255, 63, 174, 220, 117, 83, 60, 175, 234, 136, 93, 18, 102, 239, 65, 215, 154, 245, 72, 3, 108, 20, 213, 150, 92, 123, 195, 54, 97, 83, 95, 36, 129, 80, 155, 71, 221, 185, 57, 77, 7, 174, 53, 186, 251, 32, 200, 162, 224, 37, 1, 152, 2, 191, 14, 67, 135, 39, 73, 57, 241, 53, 194, 156, 219, 123, 240, 247, 103, 150, 75, 243, 168, 98, 202, 48, 117, 37, 53, 22, 56, 80, 79, 232, 183, 213, 57 },
                            Role = "Admin",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("BSPracaInzynierska.Shared.MusicPlaylist", b =>
                {
                    b.HasOne("BSPracaInzynierska.Shared.User", null)
                        .WithMany("MusicPlaylists")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("BSPracaInzynierska.Shared.Song", b =>
                {
                    b.HasOne("BSPracaInzynierska.Shared.MusicPlaylist", null)
                        .WithMany("Songs")
                        .HasForeignKey("MusicPlaylistId");
                });

            modelBuilder.Entity("BSPracaInzynierska.Shared.MusicPlaylist", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("BSPracaInzynierska.Shared.User", b =>
                {
                    b.Navigation("MusicPlaylists");
                });
#pragma warning restore 612, 618
        }
    }
}
