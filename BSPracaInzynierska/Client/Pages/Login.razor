@page "/login"
@inject NavigationManager navigationManager
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject ILoginService loginService


<div class="container mx-auto">
    <div class="row">
        <div class="col-3"></div>
        <div class="col-6">
            <h3 class="text-center">Login</h3>
            <br />
            <input type="text" @bind-value="@userName" class="form-control" placeholder="Username" />
            <br />
            <input type="password" @bind-value="@userPassword" class="form-control" placeholder="Password" />
            <br />
            <button class="btn btn-primary" @onclick="LoginUser">Login</button>
            <br />
            <p>Don't have account? <a href="" @onclick="SignUp" class="link-primary">Sign up for free</a></p>
        </div>
        <div class="col-3"></div>
    </div>
</div>




@code {
    [CascadingParameter]
    public Task<AuthenticationState> authenticationState { get; set; }
    private string userName = string.Empty;
    private string userPassword = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        var authState = await authenticationState;
        var user = authState.User;
        if(user.Identity.IsAuthenticated)
        {
            navigationManager.NavigateTo("/", true);
        }
    }

    public async Task LoginUser()
    {
        var token = await loginService.Login(userName, userPassword);
        if(token.Token != string.Empty)
        {
            await localStorage.SetItemAsync("jwt_token", token.Token);
            navigationManager.NavigateTo("/", true);
        }
        else
        {
            navigationManager.NavigateTo("/login", true);
        }
    }

    public void SignUp()
    {
        navigationManager.NavigateTo("/register");
    }


}
