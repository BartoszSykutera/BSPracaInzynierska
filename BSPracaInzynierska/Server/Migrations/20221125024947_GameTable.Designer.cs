// <auto-generated />
using System;
using BSPracaInzynierska.Server.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BSPracaInzynierska.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221125024947_GameTable")]
    partial class GameTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BSPracaInzynierska.Shared.GameTypeOne", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("NumberOfTracks")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("points")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("GameTypeOne");
                });

            modelBuilder.Entity("BSPracaInzynierska.Shared.MusicPlaylist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfTracks")
                        .HasColumnType("int");

                    b.Property<string>("PlaylistName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("MusicPlaylists");
                });

            modelBuilder.Entity("BSPracaInzynierska.Shared.Song", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GameTypeOneId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PlaylistId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("SongDuration")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YTChanelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YTVideoTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YTVidoeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GameTypeOneId");

                    b.HasIndex("PlaylistId");

                    b.ToTable("Songs");
                });

            modelBuilder.Entity("BSPracaInzynierska.Shared.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Uzytkownicy");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e6f2dfa2-a690-4ddd-9ac5-1953a0a551bf"),
                            Email = "admin",
                            PasswordHash = new byte[] { 40, 26, 134, 20, 147, 67, 94, 174, 204, 217, 75, 226, 83, 154, 47, 246, 0, 165, 208, 40, 78, 33, 248, 36, 78, 247, 99, 34, 44, 82, 219, 48, 225, 193, 14, 51, 181, 100, 184, 221, 160, 37, 120, 3, 200, 237, 130, 251, 96, 196, 255, 102, 60, 49, 140, 65, 198, 62, 77, 34, 62, 130, 92, 81 },
                            PasswordSalt = new byte[] { 82, 120, 208, 251, 182, 103, 57, 71, 247, 232, 180, 191, 43, 194, 189, 219, 4, 146, 196, 166, 191, 217, 216, 147, 222, 198, 16, 128, 96, 0, 45, 55, 145, 194, 221, 29, 115, 103, 90, 221, 82, 1, 174, 76, 104, 72, 157, 92, 176, 228, 174, 173, 238, 203, 24, 52, 51, 106, 214, 84, 71, 125, 108, 16, 255, 77, 244, 99, 11, 99, 190, 84, 231, 142, 103, 21, 241, 21, 201, 182, 224, 84, 175, 66, 138, 15, 76, 226, 23, 193, 159, 95, 247, 128, 240, 176, 107, 2, 239, 80, 153, 25, 248, 148, 196, 174, 169, 34, 213, 9, 154, 144, 173, 173, 104, 112, 193, 157, 176, 66, 72, 188, 70, 144, 17, 4, 80, 242 },
                            Role = "Admin",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("BSPracaInzynierska.Shared.GameTypeOne", b =>
                {
                    b.HasOne("BSPracaInzynierska.Shared.User", "Player")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("BSPracaInzynierska.Shared.MusicPlaylist", b =>
                {
                    b.HasOne("BSPracaInzynierska.Shared.User", "Creator")
                        .WithMany("MusicPlaylists")
                        .HasForeignKey("UserId");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("BSPracaInzynierska.Shared.Song", b =>
                {
                    b.HasOne("BSPracaInzynierska.Shared.GameTypeOne", null)
                        .WithMany("Songs")
                        .HasForeignKey("GameTypeOneId");

                    b.HasOne("BSPracaInzynierska.Shared.MusicPlaylist", "Playlist")
                        .WithMany("Songs")
                        .HasForeignKey("PlaylistId");

                    b.Navigation("Playlist");
                });

            modelBuilder.Entity("BSPracaInzynierska.Shared.GameTypeOne", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("BSPracaInzynierska.Shared.MusicPlaylist", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("BSPracaInzynierska.Shared.User", b =>
                {
                    b.Navigation("MusicPlaylists");
                });
#pragma warning restore 612, 618
        }
    }
}
